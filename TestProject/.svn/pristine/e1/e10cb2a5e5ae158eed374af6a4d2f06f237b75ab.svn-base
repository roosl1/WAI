package com.test.imsi;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

/**
 * Handles requests for the application home page.
 */
@Controller
public class HomeController {
	
	private static final Logger logger = LoggerFactory.getLogger(HomeController.class);
	
	/**
	 * Simply selects the home view to render by returning its name.
	 */
	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String home(Locale locale, Model model) {
		
		return "User_Main";
	}
	

	/*//------------------------------------------QNA게시판----------------------------------
	@RequestMapping(value = "/goqnaboard" , method = RequestMethod.GET)
	public ModelAndView goqnaboard(ModelAndView mv,HttpServletRequest req)
	{
		List <QnaboardVO> list1 = QnaboardDAO.qnaboardAllData();
		
		mv.addObject("list1", list1);
		mv.setViewName("qnaboard");
		
		String user = req.getParameter("user");
		
		HttpSession hs = req.getSession();
		
		if(user!=null)
			hs.setAttribute("user", user);
		
		return mv;
	}*/
	
	@RequestMapping(value = "/goaboutcompany" , method = RequestMethod.GET)
	public ModelAndView goaboutcompany(ModelAndView mv,HttpServletRequest req)
	{
		mv.setViewName("about_company");
		return mv;
	}
	//회사 소개
	
	//--------------------------------------------관리자 게시판--------------------------------------------------------
	
	@RequestMapping(value = "/goadminpage" , method = RequestMethod.GET)
	public ModelAndView goadminpage(ModelAndView mv,HttpServletRequest req)
	{
		mv.setViewName("admin_Main");
		return mv;
	}
	//(임시)관리자 페이지
	
	@RequestMapping(value = "/go_admin_product_list" , method = RequestMethod.GET)
	public ModelAndView goadminproductlist(ModelAndView mv,HttpServletRequest req)
	{
		mv.setViewName("admin_product_list");
		return mv;
	}
	//관리자 - 상품 목록 보기
	
	@RequestMapping(value = "/go_admin_insert_product" , method = RequestMethod.GET)
	public ModelAndView goadmininsertproduct(ModelAndView mv,HttpServletRequest req)
	{
		mv.setViewName("admin_insert_product");
		return mv;
	}
	//관리자 - 상품 등록하기
	
	@RequestMapping(value = "/contents1" , produces = "application/json")
	public @ResponseBody Map<String,Object> contents(@RequestBody Map<String, Object> params)
	{
		int number =(Integer) params.get("number");
		
		System.out.println("Qna Number : " + number);
		
		long start = System.currentTimeMillis();
		
		QnaboardVO qvo = QnaboardDAO.qnaboardSearchData(number);
		
		long end = System.currentTimeMillis();
		
		System.out.println("실행시간 : " + (end-start)/1000.0 + "초");
		
		System.out.println("Qna Contents : " + qvo.getQnacontents());
		
		Map <String,Object> map1 = new HashMap <String,Object>();
		
		System.out.println("어딘가 느려짐");
		
		long start2 = System.currentTimeMillis();
		
		List <QnaboardVO> list1 = QnaboardDAO.qnaboardAllData();
		
		long end2 = System.currentTimeMillis();
		
		System.out.println("실행시간2 : " + (end2-start2)/1000.0 + "초");
		
		System.out.println("어딘가 느려짐2");
		
		map1.put("number1", number);
		
		System.out.println("어딘가 느려짐3");
		
		map1.put("content1", qvo.getQnacontents());
		
		System.out.println("어딘가 느려짐4");
		
		map1.put("list2" , list1);
		
		map1.put("proname", qvo.getProductname());
		
		map1.put("qnaanswercontent", qvo.getQnaanswercontents());
		
		System.out.println("--------------");

		return map1;
	}
	
	@RequestMapping(value = "/goqnainsert" , method = RequestMethod.GET)
	public ModelAndView goqnainsert(ModelAndView mv,HttpServletRequest req)
	{
		mv.setViewName("qnainsert");
		return mv;
	}
	
	@RequestMapping(value = "/qnains" , method = RequestMethod.GET)
	public String qnainsert(HttpServletRequest req)
	{
		String qnakind = req.getParameter("kind");
		String qnasubject = req.getParameter("qnasubject");
		String qnacontents = req.getParameter("qnacontents");
		
		int qnalock;
		
		if(req.getParameter("qnalock") == null)
			qnalock = 0;
		else
			qnalock = 1;
		
		System.out.println("사이즈 알기 전");
		
		int temp;
		temp = QnaboardDAO.qnaboardMaxNum();
		
		System.out.println("사이즈 안 후");
		int maxnum = temp+1;
		
		Date date = new Date();
		SimpleDateFormat transFormat = new SimpleDateFormat("yyyy-MM-dd");
		String todate = transFormat.format(date);
		
		HttpSession hs = req.getSession();	
		String user = (String) hs.getAttribute("user");
		
		QnaboardVO qvo = new QnaboardVO(maxnum,qnakind,qnasubject,qnacontents,todate,qnalock,0,user,"bob","");
		
		System.out.println("인서트전");
		
		QnaboardDAO.qnaboardInsert(qvo);
		
		System.out.println("인서트후");
		
		return "redirect:/goqnaboard";
	}
	
	@RequestMapping(value = "/qnadel"  ,method = RequestMethod.GET)
	public String qnadelete(HttpServletRequest req)
	{
		int number = Integer.parseInt(req.getParameter("number1"));
		
		QnaboardDAO.qnaboardDelete(number);
		
		return "redirect:/goqnaboard";	
	}
	
	@RequestMapping(value = "/goqnaans" , method = RequestMethod.GET)
	public ModelAndView goqnaans(ModelAndView mv,HttpServletRequest req)
	{
		int number = Integer.parseInt(req.getParameter("number1"));
		
		mv.addObject("number",number);
		mv.setViewName("popup");
		
		return mv;
	}
	

	@RequestMapping(value = "/qnaanscon"  ,method = RequestMethod.POST)
	public String qnaasncont(@RequestBody Map<String, Object> params)
	{
		int number = Integer.parseInt((String)params.get("qnano"));
		String qnaanswercontents = (String) params.get("qnaanswercontents");
		
		System.out.println("글번호 : " + number);
		System.out.println("답변 내용 : " + qnaanswercontents);
		
		QnaboardVO qvo = new QnaboardVO();
		
		qvo.setQnano(number);
		qvo.setQnaanswercontents(qnaanswercontents);
		
		System.out.println(qvo.getQnano());
		System.out.println(qvo.getQnaanswercontents());
		
		QnaboardDAO.qnaboardUpdate(qvo);
		
		String a = "redirect:/goqnaans?number1="+number;
		
		return a;
	}
	
	//--------------------------------------------공지사항게시판--------------------------------------------------------
	
	
	@RequestMapping(value = "/gonoticeboard" , method = RequestMethod.GET)
	public ModelAndView gonoticeboard(ModelAndView mv,HttpServletRequest req)
	{
		List <NoticeboardVO> list1 = NoticeboardDAO.noticeboardAllData();
		
		mv.addObject("list1", list1);
		mv.setViewName("noticeboard");
		
		String user = req.getParameter("user");
		
		HttpSession hs = req.getSession();
		
		if(user!=null)
			hs.setAttribute("user", user);
		
		return mv;
	}
	
	@RequestMapping(value = "/noticeview" , method = RequestMethod.GET)
	public ModelAndView noticeview(ModelAndView mv,HttpServletRequest req)
	{
		int noticeno = Integer.parseInt(req.getParameter("noticeno"));
		
		System.out.println("글번호 : " + noticeno);
		
		NoticeboardVO nvo = NoticeboardDAO.noticeboardViewData(noticeno);
		
		mv.addObject("nvo",nvo);
		mv.setViewName("noticeview");
		
		return mv;
	}
	
	@RequestMapping(value = "/gonoticeinsert" , method = RequestMethod.GET)
	public ModelAndView gonoticeinsert(ModelAndView mv,HttpServletRequest req)
	{
		if(req.getParameter("edit")!=null)
		{
			String noticesubject = req.getParameter("noticesubject");
			String noticecontents = req.getParameter("noticecontents");
			int noticeno = Integer.parseInt(req.getParameter("noticeno"));
			String noticedate = req.getParameter("noticedate");
			
			mv.addObject("noticesubject",noticesubject);
			mv.addObject("noticecontents",noticecontents);
			mv.addObject("noticeno",noticeno);
			mv.addObject("noticedate",noticedate);
		}	
		
		mv.setViewName("noticeinsert");
		return mv;
	}
	
	@RequestMapping(value = "/noticeboarddelete" , method = RequestMethod.GET)
	public String noticeboarddelete(HttpServletRequest req)
	{
		int noticeno = Integer.parseInt(req.getParameter("noticeno"));
		
		NoticeboardDAO.noticeboardDeleteData(noticeno);
		
		return "redirect:/gonoticeboard";
	}
	
	@RequestMapping(value = "/noticeboardinsert" , method = RequestMethod.GET)
	public String noticeinsert(HttpServletRequest req)
	{	
		if(req.getParameter("edit")!=null)
		{
			String noticesubject = req.getParameter("noticesubject");
			String noticecontents = req.getParameter("noticecontents");
			int maxnum = Integer.parseInt(req.getParameter("noticeno"));
			
			NoticeboardVO nvo = new NoticeboardVO();
			nvo.setNoticesubject("noticesubject");
			nvo.setNoticecontents("noticecontents");
			
			System.out.println("인서트전");
			
			NoticeboardDAO.noticeboardUpdate(nvo);
			
			System.out.println("인서트후");
		}
		else
		{
			String noticesubject = req.getParameter("noticesubject");
			String noticecontents = req.getParameter("noticecontents");
			
			int temp;
			temp = NoticeboardDAO.noticeboardMaxNum();
			
			System.out.println("사이즈 안 후");
			int maxnum = temp+1;
			
			Date date = new Date();
			SimpleDateFormat transFormat = new SimpleDateFormat("yyyy-MM-dd");
			String todate = transFormat.format(date);
			
			NoticeboardVO nvo = new NoticeboardVO(maxnum,noticesubject,noticecontents,todate);
			
			System.out.println("인서트전");
			
			NoticeboardDAO.noticeboardInsert(nvo);
			
			System.out.println("인서트후");
		}
		
		return "redirect:/gonoticeboard";
	}
	   @RequestMapping(value = "/goqnaboard" , method = RequestMethod.GET)
	   public ModelAndView qnapaging(ModelAndView mv , HttpServletRequest req)
	   {
		   int page = 1;
		      
		      if(req.getParameter("page")!=null)
		      {
		         page = Integer.parseInt(req.getParameter("page"));
		      }
	      
	      int totalnum = QnaboardDAO.qnaboardNum();
	      
	      int totalnum2 = ((totalnum-1)/15)+1;
	      
	      Map <String,Object> map1 = new HashMap <String,Object>();
	      map1.put("page", page);
	      map1.put("totalnum", totalnum);
	      
	      System.out.println(totalnum);
	      
	      List <QnaboardVO> list1 = QnaboardDAO.qnaboardPaging(map1);
	      
	      mv.addObject("list1",list1);
	      mv.setViewName("qnaboard");
	      mv.addObject("totalnum2" , totalnum2);
	      
	      String user = req.getParameter("user");
	      
	      HttpSession hs = req.getSession();
	      
	      if(user!=null)
	         hs.setAttribute("user", user);
	      
	      return mv;
	   }
	
/*	@RequestMapping(value = "/contents1" , produces = "application/text; charset=utf8")
	public ModelAndView contents(@RequestBody Map<String, Object> params,HttpServletRequest req,ModelAndView mv)
	{
		int number = Integer.parseInt((String) params.get("number"));
		
		System.out.println(number);
		
		QnaboardVO qvo = QnaboardDAO.qnaboardSearchData(number);
		
		System.out.println(qvo.getQnacontents());
		
		mv.addObject("qvo",qvo);
		mv.setViewName("qnaboard");
		
		System.out.println("111111111");
		
		return mv;
	}*/
}
