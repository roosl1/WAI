<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>

<!DOCTYPE html>

<html>
<head>

<meta charset="EUC-KR">
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="cache-control" content="no-store,no-cache">

<title>Insert title here</title>

<script src="https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
<script>
  
    function sample3_execDaumPostcode() {
      
        new daum.Postcode({
            oncomplete: function(data) {
                // 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

                // 각 주소의 노출 규칙에 따라 주소를 조합한다.
                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                var addr = ''; // 주소 변수
                var extraAddr = ''; // 참고항목 변수

                //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                    addr = data.roadAddress;
                } else { // 사용자가 지번 주소를 선택했을 경우(J)
                    addr = data.jibunAddress;
                }

                // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.
                if(data.userSelectedType === 'R'){
                    // 법정동명이 있을 경우 추가한다. (법정리는 제외)
                    // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
                    if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){
                        extraAddr += data.bname;
                    }
                    // 건물명이 있고, 공동주택일 경우 추가한다.
                    if(data.buildingName !== '' && data.apartment === 'Y'){
                        extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);
                    }
                    // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
                    if(extraAddr !== ''){
                        extraAddr = ' (' + extraAddr + ')';
                    }
                    // 조합된 참고항목을 해당 필드에 넣는다.
                    document.getElementById("sample3_extraAddress").value = extraAddr;
                
                } else {
                    document.getElementById("sample3_extraAddress").value = '';
                }

                // 우편번호와 주소 정보를 해당 필드에 넣는다.
                document.getElementById('sample3_postcode').value = data.zonecode;
                document.getElementById("sample3_address").value = addr;
                // 커서를 상세주소 필드로 이동한다.
                document.getElementById("sample3_detailAddress").focus();

              
            },
            
        }).open();
    }
</script>

<script>


function goshop() {
	
	document.update.action="goshop";
	document.update.submit();
}

function loginchk() {
		
		var logininfo = ${ sessionScope.loginid };
		
		if (logininfo=="") {
			
			document.update.action="logout";
			document.update.submit();
			
		}
		
}


function logout() {
	
	document.update.action="logout";
	document.update.submit();
	
}

function updatechk() {
	
	if(!update.pw.value){
		alert("비밀번호를 입력해주세요.");
		return false;
	}
	
	if(!update.pwchk.value){
		alert("비밀번호 확인란에 비밀번호를 입력해주세요.")
		return false;
	}
	
	if(update.pw.value != update.pwchk.value) {
		alert("비밀번호 확인이 일치하지 않습니다.")
		return false;
	}
	
	if(!update.ad.value){
		alert("주소를 입력해주세요.");
		return false;
	}
	
	if(!update.hp1.value || !update.hp2.value || !update.hp3.value){
		alert("연락처를 입력해주세요.");
		return false;
	}
	
	if(update.hp1.value.length < 3){
		alert("올바른 핸드폰 번호를 입력해주세요.")
		return false;
	}
	
	if(update.hp2.value.length < 4){
		alert("올바른 핸드폰 번호를 입력해주세요.")
		return false;
	}
	
	if(update.hp3.value.length < 4){
		alert("올바른 핸드폰 번호를 입력해주세요.")
		return false;
	}
	
	if(!update.email.value){
		alert("이메일을 입력해주세요.")
		return false;
	}
	
	document.update.action="update";
	document.update.submit();
}

</script>

</head>
<body>


	<h2>내 정보 보기</h2>
	
	<form name="update" method="post" onload="loginchk()">
	


	이름	: <input type="text" name="name" value="${mvo.name}" readonly> <br>
	아이디 : <input type="text" name="id" value="${mvo.id }" readonly> <br>
	비밀번호 : <input type="password" name="pw" value="${mvo.pw }"> <br>
	비밀번호 확인 : <input type="password" name="pwchk" value="${mvo.pw }"> <br>
	주소 : <br>
	<input type="text" name="ad1" id="sample3_postcode" value="${mvo.ad1 }" placeholder="우편번호">
	<input type="button" onclick="sample3_execDaumPostcode()" value="주소 수정 하기"><br>
	<input type="text" name="ad2" id="sample3_address" value="${mvo.ad2 }" placeholder="주소"><br>
	<input type="text" name="ad3" id="sample3_detailAddress" value="${mvo.ad3 }" placeholder="상세주소"> <br>
	<input type="hidden" id="sample3_extraAddress" placeholder="참고항목">
	연락처 :<input type="text" name="hp1" value="${mvo.hp1}">-<input type="text" name="hp2" value="${mvo.hp2}">-<input type="text" name="hp3" value="${mvo.hp3}"> <br>
	이메일 : <input type="text" name="email" value="${mvo.email}"> <br>
    
	<input type="button" value="수정하기" onclick="updatechk()">
	<input type="button" value="로그아웃" onclick="logout()">
	<input type="button" value="후기 작성" onclick="review()">
	<input type="button" value="쇼핑하러 가기" onclick="goshop()">
	
	</form>
</body>
</html>