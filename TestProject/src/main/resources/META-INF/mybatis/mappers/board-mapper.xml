<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.test.imsi.board-mapper">

	<!-- 장바구니 -->
	<insert id="cartInsert" parameterType="cart">
      Insert into cart
      Values (#{cartno} , #{id} , #{productcode} , #{productamount}) 
   </insert>
   
   <select id="cartMaxNum" resultType="int">
      Select max(cartno)
      From cart
      </select>
      
      <select id="productMapping" resultType="String" parameterType="product">
      Select productcode
      From producttable
      Where productsubject = #{productsubject} and productsize = #{productsize} and productcolor = #{productcolor}
   </select>
 
	<!-- 여기서부터 QNA -->

	<select id="qnaboardAllData" resultType="qnaboard">
		Select qnano,qnakind,qnasubject,to_char(qnadate,'YYYY-MM-DD') AS qnadate,qnalock,qnaanswer,memberid 
		From qnaboard
		Order by qnano desc
	</select>
	
	<select id="qnaboardNum" resultType="int" parameterType="String">
		Select count(qnano) 
		From qnaboard
		Where productcode = #{productcode}
	</select>
	
	<select id="qnaboardNum1" resultType="int" >
		Select count(qnano) 
		From qnaboard
	</select>

   	<select id="qnaboardPaing" resultType="qnaboard" parameterType="hashmap">
		Select *
		From (Select Q.* , rownum as R 
			  From (Select * 
			        From qnaboard Where productcode = #{productcode} order by qnano desc) Q 
		<choose>
			<when test="(((page-1)*10)+10) > totalnum">
				<![CDATA[Where rownum <= #{totalnum} ]]>	
			</when>
			<otherwise>
				<![CDATA[Where rownum <= ((#{page}-1)*10)+10 ]]>
			</otherwise>
		</choose>
			)
		Where R >= ((#{page}-1)*10)+1
	</select>
	
	<select id="qnaboardPaing1" resultType="qnaboard" parameterType="hashmap">
		Select *
		From (Select Q.* , rownum as R 
			  From (Select * 
			        From qnaboard order by qnano desc) Q 
		<choose>
			<when test="(((page-1)*10)+10) > totalnum">
				<![CDATA[Where rownum <= #{totalnum} ]]>	
			</when>
			<otherwise>
				<![CDATA[Where rownum <= ((#{page}-1)*10)+10 ]]>
			</otherwise>
		</choose>
			)
		Where R >= ((#{page}-1)*10)+1
	</select>
	
	<select id="qnaboardSearchData" resultType="qnaboard" parameterType="int">
		Select qnacontents , productcode , qnaanswercontents
		From qnaboard
		Where qnano = #{qnano}
	</select>
	
	<select id="qnaboardMaxNum" resultType="int">
		Select max(qnano)
		From qnaboard
	</select>
	
	<insert id="qnaboardInsert" parameterType="qnaboard">
		Insert into qnaboard (QNANO,QNAKIND,QNASUBJECT,QNACONTENTS,QNADATE,QNALOCK,QNAANSWER,MEMBERID,PRODUCTCODE,QNAANSWERCONTENTS)
		Values (#{qnano} , #{qnakind} , #{qnasubject} , #{qnacontents} , #{qnadate} , #{qnalock} , #{qnaanswer} , #{memberid} , #{productcode} , #{qnaanswercontents}) 
	</insert>
	
	<delete id="qnaboardDelete" parameterType="int">
		Delete From qnaboard
		Where qnano = #{qnano}
	</delete>
	
	<update id="qnaboardUpdate" parameterType="qnaboard">
		Update qnaboard
		Set qnaanswer = 1 , qnaanswercontents = #{qnaanswercontents}
		Where qnano = #{qnano}
	</update>
	
	<!-- 여기서부터 공지사항 -->
	
	<select id="noticeboardAllData" resultType="noticeboard">
		Select noticeno,noticesubject,to_char(noticedate,'YYYY-MM-DD') AS noticedate 
		From noticeboard
		Order by noticeno desc
	</select>
	
	<select id="noticeboardNum" resultType="int">
		Select count(noticeno) 
		From noticeboard
	</select>
	
	<select id="noticeboardPaing" resultType="noticeboard" parameterType="hashmap">
		Select *
		From (Select Q.* , rownum as R 
			  From (Select * 
			        From noticeboard order by noticeno desc) Q 
		<choose>
			<when test="(((page-1)*10)+10) > totalnum">
				<![CDATA[Where rownum <= #{totalnum} ]]>	
			</when>
			<otherwise>
				<![CDATA[Where rownum <= ((#{page}-1)*10)+10 ]]>
			</otherwise>
		</choose>
			)
		Where R >= ((#{page}-1)*10)+1
	</select>
	
	<select id="noticeboardViewData" resultType="noticeboard" parameterType="int">
		Select noticeno , noticesubject , noticecontents , to_char(noticedate,'YYYY-MM-DD') AS noticedate 
		From noticeboard
		Where noticeno = #{noticeno}
	</select>
	
	<delete id="noticeboardDeleteData" parameterType="int">
		Delete From noticeboard
		Where noticeno = #{noticeno}
	</delete>
	
	<select id="noticeboardMaxNum" resultType="int">
		Select max(noticeno)
		From noticeboard
	</select>
	
	<insert id="noticeboardInsert" parameterType="noticeboard">
		Insert into noticeboard (noticeno , noticesubject , noticecontents , noticedate)
		Values (#{noticeno} , #{noticesubject} , #{noticecontents} , #{noticedate}) 
	</insert>
	
	<update id="noticeboardUpdate" parameterType="noticeboard">
		Update noticeboard
		Set noticesubject = #{noticesubject} , noticecontents = #{noticecontents}
		Where noticeno = #{noticeno}
	</update>
	
	<!-- <select id="qnaboardSearchData" resultType="qnaboard" parameterType="int">
		Select qnano,qnakind,qnasubject,qnacontents,qnadate,qnalock,qnaanswer,memberid,productname
		From qnaboard
		Where qnano = #{qnano}
	</select> -->
	
	<!-- 여기서부터 상품관련 -->
	
	 <select id="mainProductList" resultType="product" parameterType="String">
      Select *
      From producttable
      Where productcategory = #{productcategory}
  	 </select>
	
	 <select id="productSameData" resultType="product" parameterType="String">
      Select productsize , productcolor
      From producttable
      Where productsubject = #{productsubject}
   </select>
   
	<select id="productAllData" resultType="product">
		Select * 
		From producttable
	</select>
	
	<select id="productNum" resultType="int">
		Select count(productcode) 
		From producttable
	</select>
	
	<select id="productPaing" resultType="product" parameterType="hashmap">
		Select *
		From (Select Q.* , rownum as R 
			  From (Select * 
			        From producttable order by producttable desc) Q 
		<choose>
			<when test="(((page-1)*10)+10) > totalnum">
				<![CDATA[Where rownum <= #{totalnum} ]]>	
			</when>
			<otherwise>
				<![CDATA[Where rownum <= ((#{page}-1)*10)+10 ]]>
			</otherwise>
		</choose>
			)
		Where R >= ((#{page}-1)*10)+1
	</select>
	
	<insert id="productInsert" parameterType="product">
		Insert into producttable 
		Values (#{productno} , #{productcode} , #{productcolor} , #{productsize} , #{productstock} , #{productcategory} , #{productgender} , #{productsubject} , #{productcontents} , #{original_fname} , #{stored_fname} , #{productdate} , #{productstar} , #{productprice}) 
	</insert>
	
	<update id="productUpdate" parameterType="product">
		Update producttable
		Set productstock = #{productstock} , productgender = #{productgender} , productprice = #{productprice} , productsubject = #{productsubject} , productcontents = #{productcontents} 
		Where productcode = #{productcode}
	</update>
	
	<delete id="productDelete" parameterType="String">
		Delete From producttable
		Where productcode = #{productcode}
	</delete>
	
	<select id="productMaxNum" resultType="int">
		Select max(productno)
		From producttable
	</select>
	
	<select id="productViewData" resultType="product" parameterType="String">
		Select * 
		From producttable
		Where productcode = #{productcode}
	</select>
	
	<!-- 여기서부터 리뷰관련 -->
	
	<select id="getTotal" resultType="review" parameterType="String">
		select r_star
		from reviewtable
		where r_sangpum = #{productcode}
		order by r_star desc
	</select>
	
	<select id="reviewAllData" resultType="review">
		select r_num,r_grade,r_sangpum,r_size,r_title,r_text,original_fname,stored_fname,r_date,r_writer,r_star,r_good,r_bad,r_check
		from reviewtable
		order by r_num desc
	</select>
	
	<select id="likeAllData" resultType="like" parameterType="String">
		select r_num,like_pic,dislike_pic
		from liketable
		where id1=#{id}
		order by r_num desc
	</select>
	
	<insert id="insertReview" parameterType="review">
		insert into reviewtable (r_num,r_grade,r_sangpum,r_size,r_title,r_text,r_writer,original_fname,stored_fname,r_date,r_star,r_good,r_bad,r_check)
		values(#{r_num},#{r_grade},#{r_sangpum},#{r_size},#{r_title},#{r_text},#{r_writer},#{original_fname},#{stored_fname},#{r_date},#{r_star},0,0,0)
	</insert> 
	
	<select resultType="int" id="reviewMaxNum">
		Select max(r_num)From reviewtable 
	</select>
	
	<select id="reviewNum" resultType="int" parameterType="String">
      Select count(r_num) 
      From reviewtable
      Where r_sangpum = #{productcode}
   </select>
   
   <select id="reviewPaging1" resultType="review" parameterType="hashmap">
		Select *
		From (Select Q.* , rownum as R 
			  From (Select * 
			        From reviewtable Where r_sangpum = #{productcode} order by r_num desc) Q 
		<choose>
			<when test="(((page-1)*10)+10) > totalnum">
				<![CDATA[Where rownum <= #{totalnum} ]]>	
			</when>
			<otherwise>
				<![CDATA[Where rownum <= ((#{page}-1)*10)+10 ]]>
			</otherwise>
		</choose>
			)
		Where R >= ((#{page}-1)*10)+1
	</select>
	
	<select id="reviewPaging2" resultType="review" parameterType="hashmap">
		Select *
		From (Select Q.* , rownum as R 
			  From (Select * 
			        From reviewtable Where r_sangpum = #{productcode} order by r_good desc) Q 
		<choose>
			<when test="(((page-1)*10)+10) > totalnum">
				<![CDATA[Where rownum <= #{totalnum} ]]>	
			</when>
			<otherwise>
				<![CDATA[Where rownum <= ((#{page}-1)*10)+10 ]]>
			</otherwise>
		</choose>
			)
		Where R >= ((#{page}-1)*10)+1
	</select>
	
	<select id="reviewPaging3" resultType="review" parameterType="hashmap">
		Select *
		From (Select Q.* , rownum as R 
			  From (Select * 
			        From reviewtable Where r_sangpum = #{productcode} order by r_star desc) Q 
		<choose>
			<when test="(((page-1)*10)+10) > totalnum">
				<![CDATA[Where rownum <= #{totalnum} ]]>	
			</when>
			<otherwise>
				<![CDATA[Where rownum <= ((#{page}-1)*10)+10 ]]>
			</otherwise>
		</choose>
			)
		Where R >= ((#{page}-1)*10)+1
	</select>
	
	<select id="reviewPaging4" resultType="review" parameterType="hashmap">
		Select *
		From (Select Q.* , rownum as R 
			  From (Select * 
			        From reviewtable Where r_sangpum = #{productcode} order by r_star asc) Q 
		<choose>
			<when test="(((page-1)*10)+10) > totalnum">
				<![CDATA[Where rownum <= #{totalnum} ]]>	
			</when>
			<otherwise>
				<![CDATA[Where rownum <= ((#{page}-1)*10)+10 ]]>
			</otherwise>
		</choose>
			)
		Where R >= ((#{page}-1)*10)+1
	</select>
	
	<select resultType="int" id="check" parameterType="hashmap">
		select check_like from liketable where r_num=#{r_num} and id1=#{id}
	</select>
	
	<update id="like_inc" parameterType="int">
		update reviewtable set r_good = r_good+1 where r_num = #{r_num}
	</update> 
	
	<insert id="like_insert" parameterType="like">
		insert into liketable (r_num,id1,check_like)
		values(#{r_num},#{id1},#{check_like})
	</insert>
	
	<update id="like_dec" parameterType="int">
		update reviewtable set r_good = r_good-1 where r_num = #{r_num}
	</update> 
	
	<update id="dislike_inc" parameterType="int">
		update reviewtable set r_bad = r_bad+1 where r_num = #{r_num}
	</update> 
	
	<insert id="dislike_insert" parameterType="like">
		insert into liketable (r_num,id1,check_like)
		values(#{r_num},#{id1},#{check_like})
	</insert>
	
	<update id="dislike_dec" parameterType="int">
		update reviewtable set r_bad = r_bad-1 where r_num = #{r_num}
	</update> 
	
	<delete id="like_delete" parameterType="hashmap">
		delete from liketable where r_num=#{r_num} and id1=#{id}
	</delete>
	
	<select resultType="int" id="count_like" parameterType="int">
		Select r_good From reviewtable where r_num = #{r_num} 
	</select>
	
	<select resultType="int" id="count_dislike" parameterType="int">
		Select r_bad From reviewtable where r_num = #{r_num} 
	</select>
	
	<update id="setZero">
		update reviewtable set r_check = 0
	</update>
	
	<update id="setLikeCheck" parameterType="String">
		update reviewtable set r_check = 1
		where r_num in (select r_num from liketable where id1=#{id1} and check_like = 1)
	</update>
	
	<update id="setDislikeCheck" parameterType="String">
		update reviewtable set r_check = -1
		where r_num in (select r_num from liketable where id1=#{id1} and check_like = -1)
	</update>
	
	   <!-- 여기서부터 업로드관련 -->
     <select id="uploadMaxNum" resultType="int">
      Select max(uno)
      From upload
   	</select>
   
   <insert id="uploadInsert" parameterType="upload">
      Insert into upload 
      Values (#{uno} , #{productcode} , #{original_fname} , #{stored_fname}) 
   </insert>
   
   <select id="uploadData" resultType="upload" parameterType="String">
      Select * 
      From upload
      Where productcode = #{productcode}
   </select>
	
</mapper>